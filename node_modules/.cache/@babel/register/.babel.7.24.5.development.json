{"{\"assumptions\":{},\"sourceRoot\":\"/Users/pedrovictor/Developer/Personal/Desafio_Laravel/teste_api_node/test/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/pedrovictor/Developer/Personal/Desafio_Laravel/teste_api_node\",\"filename\":\"/Users/pedrovictor/Developer/Personal/Desafio_Laravel/teste_api_node/test/posts.test.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/pedrovictor/Developer/Personal/Desafio_Laravel/teste_api_node\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.5:development":{"value":{"code":"const chai = require('chai');\nconst {\n  expect\n} = chai;\nconst chaiHttp = require('chai-http');\nchai.use(chaiHttp);\n\n// Configuração do chai\nchai.use(chaiHttp);\ndescribe('Posts API', () => {\n  // Teste para a rota POST /posts\n  describe('POST /posts', () => {\n    it('Deve criar um novo post', async () => {\n      const res = await chai.request(app).post('/posts').send({\n        title: 'Teste',\n        body: 'Conteúdo do teste',\n        tags: ['tag1', 'tag2']\n      });\n      expect(res).to.have.status(201);\n      expect(res.body).to.be.an('object');\n      expect(res.body).to.have.property('id');\n      expect(res.body.title).to.equal('Teste');\n      expect(res.body.body).to.equal('Conteúdo do teste');\n      expect(res.body.tags).to.eql(['tag1', 'tag2']);\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjaGFpIiwicmVxdWlyZSIsImV4cGVjdCIsImNoYWlIdHRwIiwidXNlIiwiZGVzY3JpYmUiLCJpdCIsInJlcyIsInJlcXVlc3QiLCJhcHAiLCJwb3N0Iiwic2VuZCIsInRpdGxlIiwiYm9keSIsInRhZ3MiLCJ0byIsImhhdmUiLCJzdGF0dXMiLCJiZSIsImFuIiwicHJvcGVydHkiLCJlcXVhbCIsImVxbCJdLCJzb3VyY2VSb290IjoiL1VzZXJzL3BlZHJvdmljdG9yL0RldmVsb3Blci9QZXJzb25hbC9EZXNhZmlvX0xhcmF2ZWwvdGVzdGVfYXBpX25vZGUvdGVzdC8iLCJzb3VyY2VzIjpbInBvc3RzLnRlc3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgY2hhaSA9IHJlcXVpcmUoJ2NoYWknKTtcbmNvbnN0IHsgZXhwZWN0IH0gPSBjaGFpO1xuY29uc3QgY2hhaUh0dHAgPSByZXF1aXJlKCdjaGFpLWh0dHAnKTtcbmNoYWkudXNlKGNoYWlIdHRwKTtcblxuLy8gQ29uZmlndXJhw6fDo28gZG8gY2hhaVxuY2hhaS51c2UoY2hhaUh0dHApO1xuXG5kZXNjcmliZSgnUG9zdHMgQVBJJywgKCkgPT4ge1xuICAvLyBUZXN0ZSBwYXJhIGEgcm90YSBQT1NUIC9wb3N0c1xuICBkZXNjcmliZSgnUE9TVCAvcG9zdHMnLCAoKSA9PiB7XG4gICAgaXQoJ0RldmUgY3JpYXIgdW0gbm92byBwb3N0JywgYXN5bmMgKCkgPT4ge1xuICAgICAgY29uc3QgcmVzID0gYXdhaXQgY2hhaS5yZXF1ZXN0KGFwcClcbiAgICAgICAgLnBvc3QoJy9wb3N0cycpXG4gICAgICAgIC5zZW5kKHtcbiAgICAgICAgICB0aXRsZTogJ1Rlc3RlJyxcbiAgICAgICAgICBib2R5OiAnQ29udGXDumRvIGRvIHRlc3RlJyxcbiAgICAgICAgICB0YWdzOiBbJ3RhZzEnLCAndGFnMiddXG4gICAgICAgIH0pO1xuXG4gICAgICBleHBlY3QocmVzKS50by5oYXZlLnN0YXR1cygyMDEpO1xuICAgICAgZXhwZWN0KHJlcy5ib2R5KS50by5iZS5hbignb2JqZWN0Jyk7XG4gICAgICBleHBlY3QocmVzLmJvZHkpLnRvLmhhdmUucHJvcGVydHkoJ2lkJyk7XG4gICAgICBleHBlY3QocmVzLmJvZHkudGl0bGUpLnRvLmVxdWFsKCdUZXN0ZScpO1xuICAgICAgZXhwZWN0KHJlcy5ib2R5LmJvZHkpLnRvLmVxdWFsKCdDb250ZcO6ZG8gZG8gdGVzdGUnKTtcbiAgICAgIGV4cGVjdChyZXMuYm9keS50YWdzKS50by5lcWwoWyd0YWcxJywgJ3RhZzInXSk7XG4gICAgfSk7XG4gIH0pO1xufSk7Il0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxJQUFJLEdBQUdDLE9BQU8sQ0FBQyxNQUFNLENBQUM7QUFDNUIsTUFBTTtFQUFFQztBQUFPLENBQUMsR0FBR0YsSUFBSTtBQUN2QixNQUFNRyxRQUFRLEdBQUdGLE9BQU8sQ0FBQyxXQUFXLENBQUM7QUFDckNELElBQUksQ0FBQ0ksR0FBRyxDQUFDRCxRQUFRLENBQUM7O0FBRWxCO0FBQ0FILElBQUksQ0FBQ0ksR0FBRyxDQUFDRCxRQUFRLENBQUM7QUFFbEJFLFFBQVEsQ0FBQyxXQUFXLEVBQUUsTUFBTTtFQUMxQjtFQUNBQSxRQUFRLENBQUMsYUFBYSxFQUFFLE1BQU07SUFDNUJDLEVBQUUsQ0FBQyx5QkFBeUIsRUFBRSxZQUFZO01BQ3hDLE1BQU1DLEdBQUcsR0FBRyxNQUFNUCxJQUFJLENBQUNRLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLENBQ2hDQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQ2RDLElBQUksQ0FBQztRQUNKQyxLQUFLLEVBQUUsT0FBTztRQUNkQyxJQUFJLEVBQUUsbUJBQW1CO1FBQ3pCQyxJQUFJLEVBQUUsQ0FBQyxNQUFNLEVBQUUsTUFBTTtNQUN2QixDQUFDLENBQUM7TUFFSlosTUFBTSxDQUFDSyxHQUFHLENBQUMsQ0FBQ1EsRUFBRSxDQUFDQyxJQUFJLENBQUNDLE1BQU0sQ0FBQyxHQUFHLENBQUM7TUFDL0JmLE1BQU0sQ0FBQ0ssR0FBRyxDQUFDTSxJQUFJLENBQUMsQ0FBQ0UsRUFBRSxDQUFDRyxFQUFFLENBQUNDLEVBQUUsQ0FBQyxRQUFRLENBQUM7TUFDbkNqQixNQUFNLENBQUNLLEdBQUcsQ0FBQ00sSUFBSSxDQUFDLENBQUNFLEVBQUUsQ0FBQ0MsSUFBSSxDQUFDSSxRQUFRLENBQUMsSUFBSSxDQUFDO01BQ3ZDbEIsTUFBTSxDQUFDSyxHQUFHLENBQUNNLElBQUksQ0FBQ0QsS0FBSyxDQUFDLENBQUNHLEVBQUUsQ0FBQ00sS0FBSyxDQUFDLE9BQU8sQ0FBQztNQUN4Q25CLE1BQU0sQ0FBQ0ssR0FBRyxDQUFDTSxJQUFJLENBQUNBLElBQUksQ0FBQyxDQUFDRSxFQUFFLENBQUNNLEtBQUssQ0FBQyxtQkFBbUIsQ0FBQztNQUNuRG5CLE1BQU0sQ0FBQ0ssR0FBRyxDQUFDTSxJQUFJLENBQUNDLElBQUksQ0FBQyxDQUFDQyxFQUFFLENBQUNPLEdBQUcsQ0FBQyxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsQ0FBQztJQUNoRCxDQUFDLENBQUM7RUFDSixDQUFDLENBQUM7QUFDSixDQUFDLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=","map":{"version":3,"names":["chai","require","expect","chaiHttp","use","describe","it","res","request","app","post","send","title","body","tags","to","have","status","be","an","property","equal","eql"],"sourceRoot":"/Users/pedrovictor/Developer/Personal/Desafio_Laravel/teste_api_node/test/","sources":["posts.test.js"],"sourcesContent":["const chai = require('chai');\nconst { expect } = chai;\nconst chaiHttp = require('chai-http');\nchai.use(chaiHttp);\n\n// Configuração do chai\nchai.use(chaiHttp);\n\ndescribe('Posts API', () => {\n  // Teste para a rota POST /posts\n  describe('POST /posts', () => {\n    it('Deve criar um novo post', async () => {\n      const res = await chai.request(app)\n        .post('/posts')\n        .send({\n          title: 'Teste',\n          body: 'Conteúdo do teste',\n          tags: ['tag1', 'tag2']\n        });\n\n      expect(res).to.have.status(201);\n      expect(res.body).to.be.an('object');\n      expect(res.body).to.have.property('id');\n      expect(res.body.title).to.equal('Teste');\n      expect(res.body.body).to.equal('Conteúdo do teste');\n      expect(res.body.tags).to.eql(['tag1', 'tag2']);\n    });\n  });\n});"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAM;EAAEC;AAAO,CAAC,GAAGF,IAAI;AACvB,MAAMG,QAAQ,GAAGF,OAAO,CAAC,WAAW,CAAC;AACrCD,IAAI,CAACI,GAAG,CAACD,QAAQ,CAAC;;AAElB;AACAH,IAAI,CAACI,GAAG,CAACD,QAAQ,CAAC;AAElBE,QAAQ,CAAC,WAAW,EAAE,MAAM;EAC1B;EACAA,QAAQ,CAAC,aAAa,EAAE,MAAM;IAC5BC,EAAE,CAAC,yBAAyB,EAAE,YAAY;MACxC,MAAMC,GAAG,GAAG,MAAMP,IAAI,CAACQ,OAAO,CAACC,GAAG,CAAC,CAChCC,IAAI,CAAC,QAAQ,CAAC,CACdC,IAAI,CAAC;QACJC,KAAK,EAAE,OAAO;QACdC,IAAI,EAAE,mBAAmB;QACzBC,IAAI,EAAE,CAAC,MAAM,EAAE,MAAM;MACvB,CAAC,CAAC;MAEJZ,MAAM,CAACK,GAAG,CAAC,CAACQ,EAAE,CAACC,IAAI,CAACC,MAAM,CAAC,GAAG,CAAC;MAC/Bf,MAAM,CAACK,GAAG,CAACM,IAAI,CAAC,CAACE,EAAE,CAACG,EAAE,CAACC,EAAE,CAAC,QAAQ,CAAC;MACnCjB,MAAM,CAACK,GAAG,CAACM,IAAI,CAAC,CAACE,EAAE,CAACC,IAAI,CAACI,QAAQ,CAAC,IAAI,CAAC;MACvClB,MAAM,CAACK,GAAG,CAACM,IAAI,CAACD,KAAK,CAAC,CAACG,EAAE,CAACM,KAAK,CAAC,OAAO,CAAC;MACxCnB,MAAM,CAACK,GAAG,CAACM,IAAI,CAACA,IAAI,CAAC,CAACE,EAAE,CAACM,KAAK,CAAC,mBAAmB,CAAC;MACnDnB,MAAM,CAACK,GAAG,CAACM,IAAI,CAACC,IAAI,CAAC,CAACC,EAAE,CAACO,GAAG,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAChD,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}},"mtime":1715699657522}}